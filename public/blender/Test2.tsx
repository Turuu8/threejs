/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 test2.gltf -t
*/

import * as THREE from "three";
import React, { Suspense, useRef } from "react";
import { RenderTexture, Text, useGLTF, useTexture, useVideoTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Circle: THREE.Mesh;
  };
  materials: {
    ["Material.002"]: THREE.MeshStandardMaterial;
  };
};

export function Test2(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/blender/test2.gltf") as GLTFResult;
  console.log(materials);

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Circle.geometry} material={materials["Material.002"]}>
        <meshStandardMaterial color="#9a9898">
          <RenderTexture attach="map" anisotropy={16}>
            <color attach="background" args={["pink"]} />
            <Text fontSize={3} color="#555">
              hello
            </Text>
          </RenderTexture>
        </meshStandardMaterial>
        {/* <Suspense fallback={null}>
          <Foo />
        </Suspense> */}
      </mesh>
    </group>
  );
}

useGLTF.preload("/blender/test2.gltf");

function Foo() {
  // images
  const map = useTexture(["imgs/event1.jpeg", "imgs/wow.webp", "imgs/galaxy.jpeg", "imgs/event2.jpeg", "imgs/event3.jpeg", "imgs/event5.jpeg"]);

  // videos
  const arr = [
    useVideoTexture("videos/vid1.mp4"),
    useVideoTexture("videos/vid2.mp4"),
    useVideoTexture("videos/vid3.mp4"),
    useVideoTexture("videos/vid4.mp4"),
    useVideoTexture("videos/vid5.mp4"),
    useVideoTexture("videos/vid6.mp4"),
  ];
  return (
    <>
      {map.map((texture, idx) => (
        <meshBasicMaterial key={texture.id} attach={`material-${idx}`} map={texture} side={THREE.TwoPassDoubleSide} />
      ))}
    </>
  );
}
