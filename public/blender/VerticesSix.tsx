/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF, useVideoTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Circle001_1: THREE.Mesh;
    Circle001_2: THREE.Mesh;
    Circle001_3: THREE.Mesh;
    Circle001_4: THREE.Mesh;
    Circle001_5: THREE.Mesh;
    Circle001_6: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
  };
};

export function VerticesSix(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/blender/vertices6.glb") as GLTFResult;
  const arr = [
    useVideoTexture("videos/vid1.mp4"),
    useVideoTexture("videos/vid2.mp4"),
    useVideoTexture("videos/vid3.mp4"),
    useVideoTexture("videos/vid4.mp4"),
    useVideoTexture("videos/vid5.mp4"),
    useVideoTexture("videos/vid6.mp4"),
  ];
  const materialsArr = [
    materials["Material.001"],
    materials["Material.002"],
    materials["Material.003"],
    materials["Material.004"],
    materials["Material.005"],
    materials["Material.006"],
  ];
  const geometrysArr = [
    nodes.Circle001_1.geometry,
    nodes.Circle001_2.geometry,
    nodes.Circle001_3.geometry,
    nodes.Circle001_4.geometry,
    nodes.Circle001_5.geometry,
    nodes.Circle001_6.geometry,
  ];
  return (
    <group {...props} dispose={null}>
      {arr.map((texture, idx) => (
        <mesh key={texture.id} castShadow receiveShadow geometry={geometrysArr[idx]} material={materialsArr[idx]}>
          <meshBasicMaterial attach={`material`} map={texture} side={THREE.TwoPassDoubleSide} />
        </mesh>
      ))}
    </group>
  );
}

useGLTF.preload("/blender/vertices6.glb");
