/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Circle: THREE.Mesh;
  };
  materials: {
    ["Material.002"]: THREE.MeshStandardMaterial;
  };
};

export function Corners(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/blender/test2.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Circle.geometry} material={materials["Material.002"]} scale={2.87} />
    </group>
  );
}

useGLTF.preload("/blender/test2.glb");
